{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PageCover","React","forwardRef","props","ref","className","data-density","children","Page","number","App","bookRef","useRef","useState","pages","totalPages","setTotalPages","currentPage","setCurrentPage","width","height","onFlip","e","data","current","pageFlip","getPageCount","map","item","index","style","src","process","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAIMA,EAAYC,IAAMC,YAAW,SAACC,EAAOC,GACzC,OACE,qBAAKC,UAAU,kBAAkBD,IAAKA,EAAKE,eAAa,OAAxD,SACE,qBAAKD,UAAU,eAAf,SACE,6BAAKF,EAAMI,kBAMbC,EAAOP,IAAMC,YAAW,SAACC,EAAOC,GACpC,OACE,qBAAKC,UAAU,OAAOD,IAAKA,EAA3B,SACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,eACf,qBAAKA,UAAU,YAAf,SAA4BF,EAAMI,WAClC,qBAAKF,UAAU,cAAf,SAA8BF,EAAMM,OAAS,YA4CtCC,MAtCf,WACE,IAAMC,EAAUV,IAAMW,SADT,EAEaC,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAF/C,mBAENC,EAFM,aAGuBD,mBAAS,IAHhC,mBAGNE,EAHM,KAGMC,EAHN,OAIyBH,mBAAS,GAJlC,mBAINI,EAJM,KAIOC,EAJP,KAWb,OACE,gCACE,8BACE,eAAC,IAAD,CACEC,MAAO,IACPC,OAAQ,IACRhB,IAAKO,EACLU,OAZW,SAACC,GAClBJ,EAAeI,EAAEC,MACjBP,EAAcL,EAAQa,QAAQC,WAAWC,iBAMrC,UAME,cAAC1B,EAAD,wBACCc,EAAMa,KAAI,SAACC,EAAMC,GAAP,OACT,cAACrB,EAAD,CAAiBC,OAAQmB,EAAzB,SACE,qBACEE,MAAO,CAAEX,MAAO,KAChBY,IAAG,UAAKC,kBAAL,uBAA0CJ,EAAO,EAAjD,QACHK,IAAKL,KAJEA,MAQb,cAAC5B,EAAD,uBAGHiB,EArBH,OAqBoBF,MC/CTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.429db5bb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport HTMLFlipBook from \"react-pageflip\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst PageCover = React.forwardRef((props, ref) => {\n  return (\n    <div className=\"page page-cover\" ref={ref} data-density=\"hard\">\n      <div className=\"page-content\">\n        <h2>{props.children}</h2>\n      </div>\n    </div>\n  );\n});\n\nconst Page = React.forwardRef((props, ref) => {\n  return (\n    <div className=\"page\" ref={ref}>\n      <div className=\"page-content\">\n        <div className=\"page-image\"></div>\n        <div className=\"page-text\">{props.children}</div>\n        <div className=\"page-footer\">{props.number + 1}</div>\n      </div>\n    </div>\n  );\n});\n\nfunction App() {\n  const bookRef = React.useRef();\n  const [pages, setPages] = useState([0, 1, 2, 3, 4, 5, 6, 7, 8]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const handleFlip = (e) => {\n    setCurrentPage(e.data);\n    setTotalPages(bookRef.current.pageFlip().getPageCount());\n  };\n\n  return (\n    <div>\n      <div>\n        <HTMLFlipBook\n          width={300}\n          height={500}\n          ref={bookRef}\n          onFlip={handleFlip}\n        >\n          <PageCover>Test Book</PageCover>\n          {pages.map((item, index) => (\n            <Page key={item} number={item}>\n              <img\n                style={{ width: 300 }}\n                src={`${process.env.PUBLIC_URL}/abc2/abc2-0${item + 1}.jpg`}\n                alt={item}\n              />\n            </Page>\n          ))}\n          <PageCover>END</PageCover>\n        </HTMLFlipBook>\n      </div>\n      {currentPage} of {totalPages}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}